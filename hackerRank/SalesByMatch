import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class SalesByMatch {

    /*
     * Complete the 'sockMerchant' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER_ARRAY ar
     */

    public static int sockMerchant(int n, List<Integer> ar) {
int[] a1=new int[ar.size()]; 
              for(int x=0;x<n;x++){
           a1[x]=ar.get(x);}
int count,tot_count=1,sum=0;
for(int i=0;i<n-1;i++)
{
    count=1;
    for(int j=i+1;j<n;j++){
        if(a1[i]==a1[j] && a1[i]!=0 )
        {
            count++; 
            a1[j]=0;
        } 
    } 
    if(count%2==0 && count>=2)
    {
        sum=sum+(count/2);
    }
    else
    if(count>1)
    {
        sum=sum+(count/2);
    }
  }
return sum ;
    }
    }



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> ar = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.sockMerchant(n, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
